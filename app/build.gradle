apply plugin: 'com.android.application'

//获取存放签名信息的keystore.properties

Properties keystoreProperties = new Properties()
keystoreProperties.load(file("keystore.properties").newDataInputStream())



android {
    signingConfigs {
        release {
            storeFile file(keystoreProperties.getProperty('release.keyFile'))
            storePassword keystoreProperties.getProperty('release.storePassword')
            keyAlias = keystoreProperties.getProperty('release.keyAlias')
            keyPassword keystoreProperties.getProperty('release.keyPassword')
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.jdnew.androidtoolslibrary"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation project(path: ':library')
}
